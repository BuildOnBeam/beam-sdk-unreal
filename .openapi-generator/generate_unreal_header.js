const fs = require('fs');

const inputFile = '../Source/PlayerClient/.openapi-generator/FILES';
const outputFile = '../Source/BeamSDK/Public/Utils/BeamPlayerClientAPI.h';


if (!fs.existsSync(inputFile)) {
    console.error(`Input file '${inputFile}' not found.`);
    process.exit(1);
}

let file = fs.readFileSync(inputFile, 'utf-8')
let lines = file.split('\n')
let headerLines = lines.filter(line => line.trim().endsWith('.h'))


fs.writeFileSync(outputFile, `\
// GENERATED FILE - DO NOT EDIT WITHOUT CONFIDENCE OF INTENT
// GENERATED by .openapi-generator/generate_unreal_header.js

#pragma once

`);

headerLines.forEach((line, i) => {
    let trimmedLine = line.trim();
    if (trimmedLine.startsWith('Public/')) {
        trimmedLine = trimmedLine.substring(7);
    } else if (trimmedLine.startsWith('Private/')) {
        return; // remove the line
    }
    fs.appendFileSync(outputFile, `#include "${trimmedLine}"\n`);
});

fs.appendFileSync(outputFile, `
using namespace OpenAPI;
`);

console.log(`Generated header file: ${outputFile}`);
