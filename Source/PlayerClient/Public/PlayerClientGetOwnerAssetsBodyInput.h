/**
 * Player API
 * The Player API is a service to integrate your game with Beam
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "PlayerClientBaseModel.h"

namespace OpenAPI
{

/*
 * PlayerClientGetOwnerAssetsBodyInput
 *
 * 
 */
class PLAYERCLIENT_API PlayerClientGetOwnerAssetsBodyInput : public Model
{
public:
    virtual ~PlayerClientGetOwnerAssetsBodyInput() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	enum class SortDirectionEnum
	{
		Asc,
		Desc,
  	};

	static FString EnumToString(const SortDirectionEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, SortDirectionEnum& EnumValue);
	TOptional<SortDirectionEnum> SortDirection;
	enum class SortByEnum
	{
		AcquiredAt,
		LastAppraisalValue,
  	};

	static FString EnumToString(const SortByEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, SortByEnum& EnumValue);
	TOptional<SortByEnum> SortBy;
	TOptional<bool> IncludeAttributes;
	TOptional<FString> Continuation;
	TOptional<double> ChainId;
	TOptional<double> Limit;
};

}
