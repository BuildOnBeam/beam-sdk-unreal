/**
 * Player API
 * The Player API is a service to integrate your game with Beam
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "PlayerClientBaseModel.h"
#include "PlayerClientGetAssetListingsResponseDataInnerPrice.h"

namespace OpenAPI
{

/*
 * PlayerClientGetAssetListingsResponseDataInner
 *
 * 
 */
class PLAYERCLIENT_API PlayerClientGetAssetListingsResponseDataInner : public Model
{
public:
    virtual ~PlayerClientGetAssetListingsResponseDataInner() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	FString Id;
	FString Side;
	enum class StatusEnum
	{
		Active,
		Inactive,
		Expired,
		Canceled,
		Filled,
  	};

	static FString EnumToString(const StatusEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, StatusEnum& EnumValue);
	TOptional<StatusEnum> Status;
	FString AssetAddress;
	FString AssetId;
	FString ContractKind;
	FString Maker;
	TOptional<PlayerClientGetAssetListingsResponseDataInnerPrice> Price;
	TOptional<FDateTime> ValidFrom;
	TOptional<FDateTime> ValidUntil;
	TOptional<double> QuantityFilled;
	TOptional<double> QuantityRemaining;
	TOptional<FDateTime> ExpiresAt;
	TOptional<FDateTime> CreatedAt;
	TOptional<FDateTime> UpdatedAt;
};

}
