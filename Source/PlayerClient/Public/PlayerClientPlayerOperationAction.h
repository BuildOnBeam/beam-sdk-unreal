/**
 * Player API
 * The Player API is a service to integrate your game with Beam
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "PlayerClientBaseModel.h"
#include "PlayerClientPlayerOperationActionSignature.h"
#include "PlayerClientPlayerOperationActionTransaction.h"

namespace OpenAPI
{

/*
 * PlayerClientPlayerOperationAction
 *
 * 
 */
class PLAYERCLIENT_API PlayerClientPlayerOperationAction : public Model
{
public:
    virtual ~PlayerClientPlayerOperationAction() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	enum class TypeEnum
	{
		FiatOnRamp,
		Sign,
		SessionRevoke,
		MarketplaceCreateOffer,
		MarketplaceCancelOffer,
		MarketplaceAcceptOffer,
		MarketplaceBuyAsset,
		MarketplaceListAsset,
		MarketplaceCancelListing,
		ExchangeConvert,
		ExchangeWrap,
		ExchangeUnwrap,
		TransferNFTs,
		TransferToken,
		CustomTransaction,
  	};

	static FString EnumToString(const TypeEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, TypeEnum& EnumValue);
	TypeEnum Type;
	FString Id;
	int32 Index = 0;
	TOptional<FString> OperationId;
	TOptional<TSharedPtr<FJsonValue>> Context;
	TOptional<PlayerClientPlayerOperationActionSignature> Signature;
	TOptional<PlayerClientPlayerOperationActionTransaction> Transaction;
};

}
