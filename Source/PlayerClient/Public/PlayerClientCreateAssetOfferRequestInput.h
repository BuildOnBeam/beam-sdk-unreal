/**
 * Player API
 * The Player API is a service to integrate your game with Beam
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "PlayerClientBaseModel.h"

namespace OpenAPI
{

/*
 * PlayerClientCreateAssetOfferRequestInput
 *
 * 
 */
class PLAYERCLIENT_API PlayerClientCreateAssetOfferRequestInput : public Model
{
public:
    virtual ~PlayerClientCreateAssetOfferRequestInput() {}
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
	void WriteJson(JsonWriter& Writer) const final;

	FString AssetAddress;
	FString AssetId;
	double Quantity;
	FString Price;
	TOptional<FDateTime> StartTime;
	TOptional<FDateTime> EndTime;
	enum class CurrencyEnum
	{
		Wbeam,
		Wsoph,
		Rat,
		Usdc,
  	};

	static FString EnumToString(const CurrencyEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, CurrencyEnum& EnumValue);
	TOptional<CurrencyEnum> Currency;
	TOptional<int64> ChainId;
	enum class OperationProcessingEnum
	{
		SignOnly,
		Execute,
  	};

	static FString EnumToString(const OperationProcessingEnum& EnumValue);
	static bool EnumFromString(const FString& EnumAsString, OperationProcessingEnum& EnumValue);
	TOptional<OperationProcessingEnum> OperationProcessing;
};

}
